/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {
    behaviors {
        homeRowModRight: homeRowModRight {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWMODRIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 14 15 16 38 39 41 40 37 36 29 27 28 26 25 24 12 0 1 2 3 5 4 17>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <300>;
            hold-trigger-on-release;
        };

        layerchangehold: layerchangehold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERCHANGEHOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17 18 36 37 38 39 40 41 24 35>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <300>;
        };

        parang_right: parang_right {
            compatible = "zmk,behavior-mod-morph";
            label = "PARANG_RIGHT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        parang_left: parang_left {
            compatible = "zmk,behavior-mod-morph";
            label = "PARANG_LEFT";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        plane: plane {
            compatible = "zmk,behavior-hold-tap";
            label = "PLANE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            retro-tap;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
        };

        thumb: thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
        };

        HomeRowModLeft: HomeRowModLeft {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWMODLEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <300>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <33 6 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 6 7 8 9 18 19 20 21 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Querty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q                   &kp W                       &kp E                    &kp R                     &kp T         &kp Y       &kp U                           &kp I                     &kp O                         &kp P                            &kp MINUS
&caps_word  &HomeRowModLeft A LGUI  &HomeRowModLeft S LEFT_ALT  &HomeRowModLeft D LCTRL  &HomeRowModLeft LSHIFT F  &plane 1 G    &plane 1 H  &homeRowModRight J RIGHT_SHIFT  &homeRowModRight K RCTRL  &homeRowModRight L RIGHT_ALT  &homeRowModRight SEMI RIGHT_GUI  &kp SQT
&mo 8       &kp Z                   &kp X                       &kp C                    &kp V                     &kp B         &kp N       &kp M                           &kp COMMA                 &kp DOT                       &kp FSLH                         &mo 7
                                                                &thumb 2 ESCAPE          &thumb 4 BACKSPACE        &kp DEL       &kp TAB     &thumb 5 SPACE                  &thumb 6 ENTER
            >;
        };

        Typing {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R          &kp T      &kp Y    &kp U      &kp I      &kp O    &kp P     &tog 0
&kp CAPS   &kp A  &kp S  &kp D    &kp F          &kp G      &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V          &kp B      &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp ESC  &kp BACKSPACE  &kp DEL    &kp TAB  &kp SPACE  &kp RET
            >;
        };

        Movement {
            bindings = <
&none  &none     &none     &none      &none      &kp LC(X)    &none      &none      &none      &none      &none    &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp LC(C)    &kp LEFT   &kp UP     &kp DOWN   &kp RIGHT  &none    &none
&none  &none     &none     &none      &none      &kp LC(V)    &kp LC(F)  &kp HOME   &kp PG_UP  &kp PG_DN  &kp END  &none
                           &none      &none      &tog 0       &kp TAB    &kp LC(Z)  &kp LC(Y)
            >;
        };

        Gaming {
            bindings = <
&kp TAB    &kp T  &kp Q  &kp W    &kp E      &kp R       &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp G  &kp A  &kp S    &kp D      &kp F       &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp B  &kp Z  &kp X    &kp C      &kp V       &trans  &trans  &trans  &trans  &trans  &trans
                         &kp ESC  &kp SPACE  &kp BSLH    &tog 0  &trans  &trans
            >;
        };

        Numbers {
            bindings = <
&none  &none          &kp PIPE          &kp CARET          &none          &kp K     &kp LS(PRCNT)  &kp N7   &kp N8  &kp N9  &kp SEMI   &none
&none  &kp LGUI       &kp LALT          &kp LCTRL          &kp LSHFT      &kp J     &kp PLUS       &kp N4   &kp N5  &kp N6  &kp MINUS  &none
&none  &parang_right  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &parang_right  &kp G     &kp STAR       &kp N1   &kp N2  &kp N3  &kp FSLH   &none
                                        &none              &none          &tog 0    &kp EQUAL      &kp DOT  &kp N0
            >;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp SQT    &kp BSLH     &kp RIGHT_PARENTHESIS  &kp COMMA       &kp RET    &kp BSPC   &kp DEL    &none     &none     &none
&kp POUND        &kp CARET             &kp EQUAL  &kp MINUS    &kp DOLLAR             &kp ASTERISK    &kp SPACE  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&kp AT_SIGN      &parang_left          &kp LBKT   &kp RBKT     &parang_right          &kp DOT         &kp TAB    &kp W      &kp B      &none     &none     &none
                                                  &kp PERCENT  &kp COLON              &kp SEMI        &tog 0     &none      &none
            >;
        };

        Function {
            bindings = <
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none    &none   &none  &none  &none  &none  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none    &none   &none  &none  &none  &none  &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none    &none   &none  &none  &none  &none  &none
                        &none    &none    &none    &tog 0  &none  &none
            >;
        };

        Lower {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&tog 1  &tog 2  &tog 3  &tog 4  &tog 5  &tog 6    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Magic {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &bt BT_CLR         &bt BT_CLR_ALL  &none        &none  &none  &none  &none
&none         &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG    &bl BL_TOG      &bl BL_INC   &none  &none  &none  &none
&none         &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF    &bl BL_CYCLE    &bl BL_DEC   &none  &none  &none  &tog 0
                                                &none            &bootloader      &sys_reset         &sys_reset      &bootloader  &none
            >;
        };
    };
};
