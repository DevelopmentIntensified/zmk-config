/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        capsword: capsword {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE MINUS>;
        };

        homeRowMod: homeRowMod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 14 15 20 21 22 16 19>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <300>;
            hold-trigger-on-release;
        };

        layerchangehold: layerchangehold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERCHANGEHOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17 18 36 37 38 39 40 41 24 35>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q               &kp W                   &kp E                &kp R                 &kp T                   &kp Y                 &kp U                      &kp I                &kp O                    &kp P                       &kp MINUS
&caps_word  &homeRowMod A LGUI  &homeRowMod S LEFT_ALT  &homeRowMod D LCTRL  &homeRowMod LSHIFT F  &layerchangehold 2 G    &layerchangehold 1 H  &homeRowMod J RIGHT_SHIFT  &homeRowMod K RCTRL  &homeRowMod L RIGHT_ALT  &homeRowMod SEMI RIGHT_GUI  &kp SQT
&kp LSHFT   &kp Z               &kp X                   &kp C                &kp V                 &kp B                   &kp N                 &kp M                      &kp COMMA            &kp DOT                  &kp FSLH                    &kp ESC
                                                        &kp ESC              &kp LS(BACKSPACE)     &kp DEL                 &kp TAB               &kp SPACE                  &kp RET
            >;
        };

        HoldingKeyLeft {
            bindings = <
&trans  &trans  &trans  &trans   &trans         &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp A   &kp S   &kp D    &kp F          &kp G      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans         &trans     &trans  &trans  &trans  &trans  &trans  &trans
                        &kp ESC  &kp BACKSPACE  &kp DEL    &trans  &trans  &trans
            >;
        };

        HoldingKeyRight {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &trans     &trans   &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp H    &kp J      &kp K    &kp L   &kp SEMI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &trans     &trans   &trans  &trans    &trans
                        &trans  &trans  &trans    &kp TAB  &kp SPACE  &kp RET
            >;
        };

        movementLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        GamingLayer {
            bindings = <
&kp TAB    &kp T  &kp Q  &kp W    &kp E      &kp R       &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp G  &kp A  &kp S    &kp D      &kp F       &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp B  &kp Z  &kp X    &kp C      &kp V       &trans  &trans  &trans  &trans  &trans  &trans
                         &kp ESC  &kp SPACE  &kp BSLH    &trans  &trans  &trans
            >;
        };

        simbolsLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        LowerLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        MagicLayer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };
    };
};
